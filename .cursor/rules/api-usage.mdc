---
description: API Usage Best Practices
globs:
alwaysApply: false
---


- Use generated API types for all API responses and requests.
- Always type API responses and variables explicitly.
- Use React Query (`useQuery`, `useMutation`) for data fetching and mutations.
- For POST/mutation requests, use the custom `@usePost.tsx` hook to handle redundant UI logic such as error toasts and loading states.
- API errors should usually be handled with a toast for user feedback.
- All API calls are processed through `@api.ts`, which is autogenerated from the OpenAPI spec (`@api-spec.yaml`).
- Handle loading, error, and success states in UI components.
- Never ignore API errors; provide user feedback or logging.
- Keep API logic in hooks or utility functions, not in UI components.
- Prefer async/await syntax for API calls.